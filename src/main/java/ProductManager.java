import java.sql.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by Krystian Szewczyk on 2015-11-11.
 */
public class ProductManager {
    private static Connection conn;
    private String url = "jdbc:hsqldb:hsql://localhost/workdb";
    private String createTableProduct =
            "CREATE TABLE Product(idProduct int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, productName varchar(30), productDescription varchar(500), price double)";

    private static PreparedStatement addProductStmt;
    private static PreparedStatement deleteAllProductsStmt;
    private static PreparedStatement getAllProductsStmt;
    private Statement stmt;

    public ProductManager() {
        try {
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();

            ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
            boolean tableExists = false;
            while (rs.next()){
                if("Product".equalsIgnoreCase(rs.getString("TABLE_NAME"))){
                    tableExists = true;
                    break;
                }
            }

            if (!tableExists)
                stmt.executeUpdate(createTableProduct);

            addProductStmt = conn.prepareStatement("INSERT INTO Product(idProduct, productName, productDescription, price) VALUES (?, ?, ?, ?)");
            deleteAllProductsStmt = conn.prepareStatement("DELETE FROM Product");
            getAllProductsStmt = conn.prepareStatement("SELECT * FROM Product");
        } catch (SQLException e){
            e.printStackTrace();
        }
    }

    public static Connection getConn() { return conn; }

    public static int addProduct(Product p){
        int count = 0;
        try {
            addProductStmt.setInt(1, p.getIdProduct());
            addProductStmt.setString(2, p.getProductName());
            addProductStmt.setString(3, p.getProductDescription());
            addProductStmt.setDouble(4, p.getPrice());

            count = addProductStmt.executeUpdate();
        } catch (SQLException e){
            e.printStackTrace();
        }
        return count;
    }

    public static void deleteAllProducts(){
        try {
            deleteAllProductsStmt.executeUpdate();
        } catch (SQLException e){
            e.printStackTrace();
        }
    }

    public static List<Product> getAllProducts() {
        List<Product> productList = new ArrayList<Product>();

        try {
            ResultSet rs = getAllProductsStmt.executeQuery();

            while (rs.next()) {
                Product product = new Product();
                product.setIdProduct(rs.getInt("idProduct"));
                product.setProductName(rs.getString("productName"));
                product.setProductDescription(rs.getString("productDescription"));
                product.setPrice(rs.getDouble("price"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return productList;
    }
}

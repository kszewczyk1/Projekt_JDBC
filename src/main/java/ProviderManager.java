import java.sql.*;
import java.util.ArrayList;
import java.util.List;

/**
 * Created by Krystian Szewczyk on 2015-11-11.
 */
public class ProviderManager {
    private static Connection conn;
    private String url = "jdbc:hsqldb:hsql://localhost/workdb";
    private String createTableProvider =
            "CREATE TABLE Provider(idProvider int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, providerName varchar(30)";

    private static PreparedStatement addProviderStmt;
    private static PreparedStatement deleteAllProvidersStmt;
    private static PreparedStatement getAllProvidersStmt;
    private Statement stmt;

    public ProviderManager (){
        try {
            conn = DriverManager.getConnection(url);
            stmt = conn.createStatement();

            ResultSet rs = conn.getMetaData().getTables(null, null, null, null);
            boolean tableExists = false;
            while (rs.next()){
                if("Provider".equalsIgnoreCase(rs.getString("TABLE_NAME"))){
                    tableExists = true;
                    break;
                }
            }

            if (!tableExists)
                stmt.executeUpdate(createTableProvider);

            addProviderStmt = conn.prepareStatement("INSERT INTO Provider(idProvider, providerName) VALUES (?, ?)");
            deleteAllProvidersStmt = conn.prepareStatement("DELETE FROM Provider");
            getAllProvidersStmt = conn.prepareStatement("SELECT * FROM Provider");
        } catch (SQLException e){
            e.printStackTrace();
        }
    }

    public static Connection getConn() { return conn; }

    public static int addProvider(Provider p){
        int count = 0;
        try {
            addProviderStmt.setInt(1, p.getIdProvider());
            addProviderStmt.setString(2, p.getProviderName());

            count = addProviderStmt.executeUpdate();
        } catch (SQLException e){
            e.printStackTrace();
        }
        return count;
    }

    public static void deleteAllProviders(){
        try {
            deleteAllProvidersStmt.executeUpdate();
        } catch (SQLException e){
            e.printStackTrace();
        }
    }

    public static List<Provider> getAllProviders() {
        List<Provider> providerList = new ArrayList<Provider>();

        try {
            ResultSet rs = getAllProvidersStmt.executeQuery();

            while (rs.next()) {
                Provider provider = new Provider();
                provider.setIdProvider(rs.getInt("idProvider"));
                provider.setProviderName(rs.getString("providerName"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return providerList;
    }

}
